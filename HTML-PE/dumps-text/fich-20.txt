UTF-8 and Unicode

   Unicode Transformation Format 8-bit is a variable-width encoding that
   can represent every character in the Unicode character set. It was
   designed for backward compatibility with ASCII and to avoid the
   complications of endianness and byte order marks in UTF-16 and UTF-32.
   ^[1]

   UTF-8 encodes each Unicode character as a variable number of 1 to 4
   octets, where the number of octets depends on the integer value
   assigned to the Unicode character. It is an efficient encoding of
   Unicode documents that use mostly US-ASCII characters because it
   represents each character in the range U+0000 through U+007F as a
   single octet.

   UTF-8 is the default encoding for XML and since 2010 has become the
   dominant character set on the Web.

Standards

     * RFC 3629: UTF-8, a transformation format of ISO 10646. November
       2003.
     * The Unicode Standard 5.0, November 2006. [purchase from Amazon.com]
          + In particular, see the informal description of UTF-8 in
            sections 2.5 and 2.6, pages 30-32, and a much more formal
            definition in sections 3.9 and 3.10, pages 77-81.

Articles and background reading

     * UTF-8 and Unicode FAQ for Unix/Linux by Markus Kuhn
     * Forms of Unicode, an excellent overview by Mark Davis
     * Wikipedia UTF-8 contains a good discussion of why five- and
       six-octet sequences are now illegal UTF-8
     * Unicode Transformation Formats [czyborra.com]
     * The Absolute Minimum Every Software Developer Absolutely,
       Positively Must Know About Unicode and Character Sets (No
       Excuses!), an amusing and informative article by Joel Spolsky

Character Sets

   The MIME character set attribute for UTF-8 is UTF-8. Character sets are
   case-insensitive, so utf-8 is equally valid. [IANA Character Sets].

   In a modern HTML 5 page, place this tag inside <head> ... </head>:
<meta charset="UTF-8">

   In an XML prolog, the encoding is typically specified as an attribute:
<?xml version="1.0" encoding="UTF-8" ?>
     __________________________________________________________________

   Last modified: Wed Jan 5 12:57:21 PST 2022

Current directory is
/home/kexin/Documents/projet-encadre/PPE1/HTML-PE/aspirations

    drwxrwxr-x    8 kexin    kexin       4096 Dec  7 17:07 ../
    -rw-rw-r--    1 kexin    kexin       8494 Dec  7 17:09 fich-1.html
    -rw-rw-r--    1 kexin    kexin     111402 Dec  7 11:37 fich-10.html
    -rw-rw-r--    1 kexin    kexin       1545 Dec  7 11:37 fich-11.html
    -rw-rw-r--    1 kexin    kexin     152855 Dec  7 11:37 fich-12.html
    -rw-rw-r--    1 kexin    kexin      75969 Dec  7 11:37 fich-13.html
    -rw-rw-r--    1 kexin    kexin     108964 Dec  7 11:37 fich-14.html
    -rw-rw-r--    1 kexin    kexin      13689 Dec  7 11:38 fich-15.html
    -rw-rw-r--    1 kexin    kexin     111347 Dec  7 11:38 fich-16.html
    -rw-rw-r--    1 kexin    kexin      72482 Dec  7 11:38 fich-17.html
    -rw-rw-r--    1 kexin    kexin      47378 Dec  7 11:38 fich-18.html
    -rw-rw-r--    1 kexin    kexin     137101 Dec  7 11:38 fich-19.html
    -rw-rw-r--    1 kexin    kexin     216698 Dec  7 11:36 fich-2.html
    -rw-rw-r--    1 kexin    kexin      54918 Dec  7 11:36 fich-3.html
    -rw-rw-r--    1 kexin    kexin      68598 Dec  7 11:37 fich-4.html
    -rw-rw-r--    1 kexin    kexin     162590 Dec  7 11:37 fich-5.html
    -rw-rw-r--    1 kexin    kexin     124549 Dec  7 11:37 fich-6.html
    -rw-rw-r--    1 kexin    kexin       1545 Dec  7 11:37 fich-7.html
    -rw-rw-r--    1 kexin    kexin       1545 Dec  7 11:37 fich-8.html
    -rw-rw-r--    1 kexin    kexin     200086 Dec  7 11:37 fich-9.html
    -rw-rw-r--    1 kexin    kexin       8485 Dec  7 10:01 fich1_1.html
    -rw-rw-r--    1 kexin    kexin     111402 Dec  7 10:02 fich1_10.html
    -rw-rw-r--    1 kexin    kexin          0 Dec  7 10:02 fich1_11.html
    -rw-rw-r--    1 kexin    kexin     153666 Dec  7 10:03 fich1_12.html
    -rw-rw-r--    1 kexin    kexin      75591 Dec  7 10:03 fich1_13.html
    -rw-rw-r--    1 kexin    kexin     108964 Dec  7 10:03 fich1_14.html
    -rw-rw-r--    1 kexin    kexin      13689 Dec  7 10:03 fich1_15.html
    -rw-rw-r--    1 kexin    kexin     111347 Dec  7 10:03 fich1_16.html
    -rw-rw-r--    1 kexin    kexin      72489 Dec  7 10:03 fich1_17.html
    -rw-rw-r--    1 kexin    kexin      47378 Dec  7 10:03 fich1_18.html
    -rw-rw-r--    1 kexin    kexin     135323 Dec  7 10:03 fich1_19.html
    -rw-rw-r--    1 kexin    kexin     243632 Dec  7 10:01 fich1_2.html
    -rw-rw-r--    1 kexin    kexin      54918 Dec  7 10:01 fich1_3.html
    -rw-rw-r--    1 kexin    kexin      68598 Dec  7 10:02 fich1_4.html
    -rw-rw-r--    1 kexin    kexin     162590 Dec  7 10:02 fich1_5.html
    -rw-rw-r--    1 kexin    kexin     124549 Dec  7 10:02 fich1_6.html
    -rw-rw-r--    1 kexin    kexin          0 Dec  7 10:02 fich1_7.html
    -rw-rw-r--    1 kexin    kexin          0 Dec  7 10:02 fich1_8.html
    -rw-rw-r--    1 kexin    kexin     200133 Dec  7 10:02 fich1_9.html

#!/usr/bin/env bash

#===============================================================================
# VOUS DEVEZ MODIFIER CE BLOC DE COMMENTAIRES.
# Ici, on décrit le comportement du programme.
# Indiquez, entre autres, comment on lance le programme et quels sont
# les paramètres.
# La forme est indicative, sentez-vous libres d'en changer !
# Notamment pour quelque chose de plus léger, il n'y a pas de norme en bash.
#===============================================================================

fichier_urls=$1 # le fichier d'URL en entrée
fichier_tableau=$2 # le fichier HTML en sortie

if [[ $# -ne 2 ]]
then
	echo "Ce programme demande exactement deux arguments."
	exit
fi

mot="家庭主妇" # à modifier

echo $fichier_urls; 
basename=$(basename -s .txt $fichier_urls)

echo "<html><body>" > $fichier_tableau
echo "<h2>Tableau $basename :</h2>" >> $fichier_tableau
echo "<br/>" >> $fichier_tableau
echo "<table>" >> $fichier_tableau
echo "<tr><th>ligne</th><th>code</th><th>URL</th><th>encodage</th><th>dump html</th><th>dump text</th><th>occurrences</th><th>contextes</th><th>concordances</th></tr>" >> $fichier_tableau

lineno=1;
while read -r URL; do
	echo -e "\tURL : $URL";
	# la façon attendue, sans l'option -w de cURL
	code=$(curl -ILs $URL | grep -e "^HTTP/" | grep -Eo "[0-9]{3}" | tail -n 1)
	charset=$(curl -Ls $URL -D - -o "./aspirations/fich-$lineno.html" | grep -Eo "charset=(\w|-)+" | cut -d= -f2)

	# autre façon, avec l'option -w de cURL
	# code=$(curl -Ls -o /dev/null -w "%{http_code}" $URL)
	# charset=$(curl -ILs -o /dev/null -w "%{content_type}" $URL | grep -Eo "charset=(\w|-)+" | cut -d= -f2)

	echo -e "\tcode : $code";

	if [[ ! $charset ]]
	then
		echo -e "\tencodage non détecté, on prendra UTF-8 par défaut.";
		charset="UTF-8";
	else
		echo -e "\tencodage : $charset";
	fi

	if [[ $code -eq 200 ]]
	then
		dump=$(lynx -dump -nolist -assume_charset=$charset -display_charset=$charset $URL)
		if [[ $charset -ne "UTF-8" && -n "$dump" ]]
		then
			dump=$(echo $dump | iconv -f $charset -t UTF-8//IGNORE)
		fi
	else
		echo -e "\tcode différent de 200 utilisation d'un dump vide"
		dump=""
		charset=""
	fi
  echo "$dump" > "./dumps-text/$basename-$lineno.txt"
 
  	compte=$(egrep $mot -wc $fichierDump)
	contexte=$(egrep -B 2 -A 2 $mot $fichierDump)
	echo "$contexte" >  ./contextes/pl_$lineno.txt
  
  # compte du nombre d'occurrences
  NB_OCC=$(grep -E -o $mot ./dumps-text/$basename-$lineno.txt | wc -l)

  # extraction des contextes

  grep -E -A2 -B2 $mot ./dumps-text/$basename-$lineno.txt > ./contextes/$basename-$lineno.txt

  # construction des concordance avec une commande externe

  bash programmes/concordance.sh ./dumps-text/$basename-$lineno.txt $mot > ./concordances/$basename-$lineno.txt

	echo "<tr><td>$lineno</td><td>$code</td><td><a href=\"$URL\">$URL</a></td><td>$charset</td><td><a href="../aspirations/fich-$lineno.html">html</a></td><td><a href="../dumps-text/fich-$lineno.txt">text</a></td><td>$NB_OCC</td><td><a href="../contextes/fich-$lineno.txt">contextes</a></td><td><a href="../concordances/$basename-$lineno.txt">concordance</a></td></tr>" >> $fichier_tableau
	echo -e "\t--------------------------------"
	lineno=$((lineno+1));
done < $fichier_urls
echo "</table>" >> $fichier_tableau
echo "</body></html>" >> $fichier_tableau
